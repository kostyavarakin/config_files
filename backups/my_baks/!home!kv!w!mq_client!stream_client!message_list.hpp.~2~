#ifndef MESSAGE_LIST_HPP
#define MESSAGE_LIST_HPP

#include <boost/interprocess/managed_shared_memory.hpp>
#include <boost/interprocess/offset_ptr.hpp>

#include <vector>
#include <list>

template <class T>
class message_list :public list {
public:
  using namespace boost::interprocess;
  typedef list< vector<T> > message_list;
  message_list::message_list() {};
  
//   offset_ptr<list_node> prev = 0, current, first;
//   int i;
//   for(i = 0; i < 10; ++i, prev = current){
//     current = static_cast<list_node*>(segment.allocate(sizeof(list_node)));
//   }


#endif

