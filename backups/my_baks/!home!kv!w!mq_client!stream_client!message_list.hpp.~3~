#ifndef MESSAGE_LIST_HPP
#define MESSAGE_LIST_HPP

#include <boost/thread/mutex.hpp>
#include <boost/thread/condition.hpp>
#include <boost/thread/thread.hpp>
#include <boost/call_traits.hpp>
#include <boost/progress.hpp>
#include <boost/bind.hpp>

#include <boost/interprocess/managed_shared_memory.hpp>
#include <boost/interprocess/allocators/allocator.hpp>

#include <list>
#include <vector>


template <class T> 
class message_list {
public:
  typedef std::list< std::vector<T> > data_chunk_type;
  bool push_back(T);
  T read_data();
  message_list();
  ~message_list();
private:
  data_chunk_type *data_chunk;
  short data_chunk_length;
  boost::mutex m_mutex;
  boost::condition m_not_empty;
  boost::condition m_not_full;

};

#endif

